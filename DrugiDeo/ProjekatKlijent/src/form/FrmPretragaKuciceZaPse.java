/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import controler.Controler;
import domen.IDomain;
import domen.KucicaZaPse;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.TableModelKucicaZaPse;

/**
 *
 * @author Win 7
 */
public class FrmPretragaKuciceZaPse extends javax.swing.JDialog {

    GlavnaForma frmGlavna;

    /**
     * Creates new form FrmPretragaKuciceZaPse
     */
    public FrmPretragaKuciceZaPse(java.awt.Frame parent, boolean modal, GlavnaForma frmGlavna) {
        super(parent, modal);
        initComponents();
        this.frmGlavna = frmGlavna;
        setLocationRelativeTo(null);
        popuniTabeluKucicaZaPse();
        pripremiZaPretragu();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtKriterijum = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbKuciceZaPse = new javax.swing.JTable();
        btnDetalji = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pretraga kucica za pse"));

        jLabel1.setText("Unesite kriterijum:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtKriterijum, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(102, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtKriterijum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Kucice za pse"));

        tbKuciceZaPse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbKuciceZaPse);

        btnDetalji.setText("Prikazi detalje");
        btnDetalji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetaljiActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDetalji)
                .addGap(26, 26, 26)
                .addComponent(btnObrisi)
                .addGap(26, 26, 26))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDetalji)
                    .addComponent(btnObrisi))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed

        int selektovani = tbKuciceZaPse.getSelectedRow();
        selektovani = tbKuciceZaPse.convertRowIndexToModel(selektovani);

        TableModelKucicaZaPse model = (TableModelKucicaZaPse) tbKuciceZaPse.getModel();
        if (selektovani != -1) {
            int result = JOptionPane.showConfirmDialog(null, "Da li ste sigurni da zelite da obrisete kucicu za pse?");
            if (result == JOptionPane.YES_OPTION) {
                try {
                    boolean obrisan = Controler.getInstance().obrisiKucicuZaPse(model.vrati(selektovani));
                    model.obrisi(selektovani);
                    if (obrisan) {
                        JOptionPane.showMessageDialog(null, "Sistem je obrisao kucicu za pse!.");
                        
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Sistem ne moze da obrise kucicu za pse.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Izaberite kucicu za pse koju zelite da obrisete.");
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnDetaljiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetaljiActionPerformed

        int selektovani = tbKuciceZaPse.getSelectedRow();
        if (selektovani >= 0) {
            int idKucicaZaPse = (int) tbKuciceZaPse.getValueAt(selektovani, 0);

            JOptionPane.showMessageDialog(null, "Sistem je nasao podatke o izabranoj kucici za pse. Izabrani proizvod ima id: " + idKucicaZaPse);
 
            JDialog frmKucicaZaPse = new FrmKucicaZaPse(null, true, idKucicaZaPse, this, frmGlavna);
            frmKucicaZaPse.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Sistem ne moze da pronadje podatke o izabranoj kucici za pse!");
        }
    }//GEN-LAST:event_btnDetaljiActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
//        frmGlavna.postaviStatus("Use case: Pregled postojecih kucica za pse!");
    }//GEN-LAST:event_formWindowActivated


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetalji;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbKuciceZaPse;
    private javax.swing.JTextField txtKriterijum;
    // End of variables declaration//GEN-END:variables

    public void popuniTabeluKucicaZaPse() {
        try {
            List<KucicaZaPse> listaKucica = new ArrayList<>();
            List<IDomain> kucice = controler.Controler.getInstance().vratiListuKucicaZaPse();

            for (IDomain iDomain : kucice) {
                if (iDomain instanceof KucicaZaPse) {
                    listaKucica.add((KucicaZaPse) iDomain);
                }
            }
            TableModelKucicaZaPse model = new TableModelKucicaZaPse(listaKucica);
            tbKuciceZaPse.setModel(model);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmPretragaKuciceZaPse.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrmPretragaKuciceZaPse.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void pripremiZaPretragu() {
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(tbKuciceZaPse.getModel());
        tbKuciceZaPse.setRowSorter(rowSorter);

        txtKriterijum.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                String kriterijum = txtKriterijum.getText();

                if (kriterijum.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" +kriterijum));
                }
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                String kriterijum = txtKriterijum.getText();

                if (kriterijum.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + kriterijum));
                }
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }
}
