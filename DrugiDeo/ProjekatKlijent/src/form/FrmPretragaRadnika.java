/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import controler.Controler;
import domen.IDomain;
import domen.Radnik;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.TableModelRadnik;

/**
 *
 * @author Win 7
 */
public class FrmPretragaRadnika extends javax.swing.JDialog {

    GlavnaForma frmGlavna;

    /**
     * Creates new form FrmPretragaRadnika
     */
    public FrmPretragaRadnika(java.awt.Frame parent, boolean modal, GlavnaForma frmGlavna) {
        super(parent, modal);
        initComponents();
        popuniTabelu();
        pripremiZaPretragu();
        setTitle("Pretraga radnika");
        this.frmGlavna = frmGlavna;
        setLocationRelativeTo(null);
        tblRanici2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtKriterijum = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtKriterijuBaza = new javax.swing.JTextField();
        btnPretrazi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRadnici = new javax.swing.JTable();
        btnDetaljiRanika = new javax.swing.JButton();
        btnObrisiRadnika = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRanici2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pretraga radnika:"));

        jLabel1.setText("Unesite kriterijum pretrage:");

        jLabel2.setText("Unesite kriterijum:");

        btnPretrazi.setText("Pretrazi");
        btnPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtKriterijum, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtKriterijuBaza)
                        .addGap(18, 18, 18)
                        .addComponent(btnPretrazi)))
                .addGap(49, 49, 49))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKriterijum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtKriterijuBaza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPretrazi)))
        );

        tblRadnici.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRadnici);

        btnDetaljiRanika.setText("Prikazi detalje");
        btnDetaljiRanika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetaljiRanikaActionPerformed(evt);
            }
        });

        btnObrisiRadnika.setText("Obrisi");
        btnObrisiRadnika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiRadnikaActionPerformed(evt);
            }
        });

        tblRanici2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblRanici2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDetaljiRanika)
                        .addGap(18, 18, 18)
                        .addComponent(btnObrisiRadnika)
                        .addGap(94, 94, 94))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDetaljiRanika)
                    .addComponent(btnObrisiRadnika))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDetaljiRanikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetaljiRanikaActionPerformed
        int row = tblRadnici.getSelectedRow();
        int row2 = tblRanici2.getSelectedRow();
        if (row2 == -1) {
            if (row >= 0) {
                String jmbg = String.valueOf(tblRadnici.getValueAt(row, 0));//probacu samo kastovanje
                JOptionPane.showMessageDialog(null, "Sistem je pronasao podatke o radniku koji ima JMBG: " + jmbg);
                
                JDialog frmRadnik = new FrmRadnik(null, true, jmbg, this, frmGlavna);
                frmRadnik.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Sistem ne moze da nadje podatke o izabranom radniku.");
            }
        } else {
            if (row2 >= 0) {
                String jmbg = String.valueOf(tblRanici2.getValueAt(row2, 0));//probacu samo kastovanje
                JOptionPane.showMessageDialog(null, "Sistem je pronasao podatke od radniku koji ima JMBG: " + jmbg);
                JDialog frmRadnik = new FrmRadnik(null, true, jmbg, this, frmGlavna);
                frmRadnik.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Sistem ne moze da nadje podatke o izabranom radniku.");
            }
        }
    }//GEN-LAST:event_btnDetaljiRanikaActionPerformed

    private void btnObrisiRadnikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiRadnikaActionPerformed

        int row = tblRadnici.getSelectedRow();
        TableModelRadnik model = (TableModelRadnik) tblRadnici.getModel();
        row = tblRadnici.convertRowIndexToModel(row);
        if (row >= 0) {
            int result = JOptionPane.showConfirmDialog(null, "Da li ste sigurni da zelite da obrisete izabranog radnika?");
            if (result == JOptionPane.YES_OPTION) {

                try {
                    boolean obrisan = Controler.getInstance().obrisiRadnika(model.vratiRadnika(row));
                    model.obrisi(row);
                    if (obrisan) {
                        JOptionPane.showMessageDialog(null, "Sistem ne moze da obrise radnika.");
                    }
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "Sistem ne moze da obrise radnika.");
                    Logger.getLogger(FrmPretragaRadnika.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Sistem ne moze da obrise radnika.");
                    Logger.getLogger(FrmPretragaRadnika.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Izaberite radnika kojeg zelite da izbrisete!");
        }

    }//GEN-LAST:event_btnObrisiRadnikaActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        //frmGlavna.postaviStatus("Use case: Pregled postojecih radnika!");
    }//GEN-LAST:event_formWindowActivated

    private void btnPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziActionPerformed
        try {
            String kriterijum = txtKriterijuBaza.getText().trim();
            Radnik radnik = new Radnik();
            radnik.setIme(kriterijum);
            radnik.setPrezime(kriterijum);
            radnik.setJmbg(kriterijum);
            List<Radnik> radnici = Controler.getInstance().vratiPoKriterijumu(radnik);
            System.out.println(radnici.size());
            int br = 0;
            for (int i = 0; i < radnici.size(); i++) {
                System.out.println(i);
                br = i;
            }
            if(br == 0){
               JOptionPane.showMessageDialog(null, "Sistem ne moze da pronadje radnika po zadatoj vrednosti.");
            }
            List<Radnik> listaRadnika = new ArrayList<>();
            for (IDomain iDomain : radnici) {
                listaRadnika.add((Radnik) iDomain);
            }
            //tblRadnici.setModel((TableModel) new ArrayList());

            TableModel model = new TableModelRadnik(listaRadnika);
            tblRanici2.setModel(model);
            tblRanici2.setVisible(true);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmPretragaRadnika.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrmPretragaRadnika.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPretraziActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetaljiRanika;
    private javax.swing.JButton btnObrisiRadnika;
    private javax.swing.JButton btnPretrazi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblRadnici;
    private javax.swing.JTable tblRanici2;
    private javax.swing.JTextField txtKriterijuBaza;
    private javax.swing.JTextField txtKriterijum;
    // End of variables declaration//GEN-END:variables

    public void popuniTabelu() {
        try {
            List<Radnik> listaRadnika = new ArrayList<>();

            List<Radnik> lista = Controler.getInstance().vratiListuRadnika();

            for (IDomain iDomain : lista) {
                listaRadnika.add((Radnik) iDomain);
            }
            TableModel model = new TableModelRadnik(listaRadnika);
            tblRadnici.setModel(model);
            tblRadnici.getColumnModel().getColumn(0).setPreferredWidth(100);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmPretragaRadnika.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrmPretragaRadnika.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void pripremiZaPretragu() {
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(tblRadnici.getModel());
        tblRadnici.setRowSorter(rowSorter);

        txtKriterijum.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                String kriterijum = txtKriterijum.getText();

                if (kriterijum.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + kriterijum));
                }
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                String kriterijum = txtKriterijum.getText();

                if (kriterijum.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + kriterijum));
                }
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }

}
