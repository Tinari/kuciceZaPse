/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import controler.Controler;
import domen.IDomain;
import domen.Mesto;
import domen.Radnik;

import java.io.IOException;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author Win 7
 */
public class FrmRadnik extends javax.swing.JDialog {

    String jmbg;
    GlavnaForma frmGlavna;
    FrmPretragaRadnika frmPretraga;

    /**
     * Creates new form FrmRadnik
     */
    public FrmRadnik(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        prepareForNew();
        setLocationRelativeTo(null);
        popuniComboMesta();
        setTitle("Radnik");
        buttonGroup1.setSelected(jrbMuski.getModel(), true);
        jrbMuski.setActionCommand("Muski");
        jrbZenski.setActionCommand("Zenski");
        cmbStatus.addItem("Stalni radnik");
        cmbStatus.addItem("Radnik na praksi");
    }

    public FrmRadnik(java.awt.Frame parent, boolean modal, String jmbg,FrmPretragaRadnika frmPretraga,GlavnaForma frmGlavna) {
        super(parent, modal);
        initComponents();
        this.jmbg = jmbg;
        this.frmPretraga=frmPretraga;
        this.frmGlavna=frmGlavna;
        jrbMuski.setActionCommand("Muski");
        jrbZenski.setActionCommand("Zenski");
        setLocationRelativeTo(null);
        popuniComboMesta();
        pregledRadnika(jmbg);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lbJmbg = new javax.swing.JLabel();
        txtJmbg = new javax.swing.JTextField();
        lbIme = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        lblPrezime = new javax.swing.JLabel();
        txtPrezime = new javax.swing.JTextField();
        lblPol = new javax.swing.JLabel();
        jrbMuski = new javax.swing.JRadioButton();
        jrbZenski = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        cmbStatus = new javax.swing.JComboBox<String>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbMesto = new javax.swing.JComboBox<Object>();
        btnSacuvaj = new javax.swing.JButton();
        btnOdustani = new javax.swing.JButton();
        DatumPocetka = new datechooser.beans.DateChooserCombo();
        btnPokreniIzmenu = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnPretraga = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbJmbg.setText("Jbmg:");

        lbIme.setText("Ime:");

        lblPrezime.setText("Prezime:");

        lblPol.setText("Pol:");

        buttonGroup1.add(jrbMuski);
        jrbMuski.setText("Muski");
        jrbMuski.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMuskiActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrbZenski);
        jrbZenski.setText("Zenski");
        jrbZenski.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbZenskiActionPerformed(evt);
            }
        });

        jLabel1.setText("Satus:");

        jLabel2.setText("Datum zaposlenja:");

        jLabel3.setText("Mesto:");

        cmbMesto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnOdustani.setText("Odustani");
        btnOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdustaniActionPerformed(evt);
            }
        });

        btnPokreniIzmenu.setText("Pokreni izmenu");
        btnPokreniIzmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPokreniIzmenuActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnPretraga.setText("Pretrazi");
        btnPretraga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretragaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lbIme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbJmbg, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                            .addComponent(lblPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPol, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jrbMuski)
                                .addGap(90, 90, 90)
                                .addComponent(jrbZenski))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtJmbg)
                                .addComponent(txtIme)
                                .addComponent(txtPrezime, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cmbMesto, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbStatus, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(DatumPocetka, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE))
                                .addGap(40, 40, 40)
                                .addComponent(btnPretraga))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(btnSacuvaj)
                        .addGap(42, 42, 42)
                        .addComponent(btnOdustani)
                        .addGap(35, 35, 35)
                        .addComponent(btnPokreniIzmenu)
                        .addGap(34, 34, 34)
                        .addComponent(btnIzmeni)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbJmbg, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtJmbg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbIme, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPol)
                    .addComponent(jrbMuski)
                    .addComponent(jrbZenski))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(DatumPocetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbMesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPretraga))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacuvaj)
                    .addComponent(btnOdustani)
                    .addComponent(btnPokreniIzmenu)
                    .addComponent(btnIzmeni))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed

        String jmbg = txtJmbg.getText().trim();
        String ime = txtIme.getText().trim();
        String prezime = txtPrezime.getText().trim();
        String pol = buttonGroup1.getSelection().getActionCommand();
        String status = cmbStatus.getSelectedItem().toString();
        Mesto mesto = (Mesto) cmbMesto.getSelectedItem();
        Date datumZaposlenja = DatumPocetka.getSelectedDate().getTime();
        System.out.println(pol);

        if (jmbg.isEmpty() || ime.isEmpty() || prezime.isEmpty() || status.isEmpty() || pol.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Sva polja su obavezna!!!");
            return;
        }

        if (jmbg.length() != 13) {
            JOptionPane.showMessageDialog(null, "JMBG mora imati 13 cifara!!!");
            return;
        }
        if (!jmbg.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(null, "JMBG mora sadrzati samo cifre!!!");
            return;
        }
        Radnik radnik = new Radnik(jmbg, ime, prezime, pol, datumZaposlenja, status, mesto);

        try {
            radnik = Controler.getInstance().zapamtiRadnika(radnik);
            JOptionPane.showMessageDialog(null, "Sistem je zapamtio radnika!");
            int result = JOptionPane.showConfirmDialog(this, "Da li zelite da unesete novog radnika?");
            if (result == JOptionPane.YES_OPTION) {
                dispose();
                JDialog glavna = new FrmRadnik(null, true);
                glavna.setVisible(true);
            } else {
                dispose();
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Sistem ne moze da zapamti radnika");
            Logger.getLogger(FrmRadnik.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Sistem ne moze da zapamti radnika");
            Logger.getLogger(FrmRadnik.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Sistem ne moze da zapamti radnika");
            Logger.getLogger(FrmRadnik.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void jrbMuskiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMuskiActionPerformed
        cmbStatus.setEnabled(true);
        cmbStatus.removeAllItems();
        cmbStatus.addItem("Stalni radnik");
        cmbStatus.addItem("Na praksi");
    }//GEN-LAST:event_jrbMuskiActionPerformed

    private void jrbZenskiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbZenskiActionPerformed
        cmbStatus.setEnabled(true);
        cmbStatus.removeAllItems();
        cmbStatus.addItem("Stalna radnica");
        cmbStatus.addItem("Na praksi");
    }//GEN-LAST:event_jrbZenskiActionPerformed

    private void btnPretragaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretragaActionPerformed
        JDialog frmPretraga = new FrmPretragaMesta(null, true);
        frmPretraga.setVisible(true);
        frmPretraga.setLocationRelativeTo(null);
        cmbMesto.setSelectedItem(session.Session.getInstance().getMap().get("odabranoMesto"));
        //ako nece, pokusati sa override-om equals metode!
    }//GEN-LAST:event_btnPretragaActionPerformed

    private void btnPokreniIzmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPokreniIzmenuActionPerformed

        String status = (String) cmbStatus.getSelectedItem();

        if (jrbMuski.isSelected()) {
            if (status.equals("Stalni radnik")) {
                cmbStatus.setSelectedItem("Stalni radnik");
                cmbStatus.addItem("Na praksi");
            }
            if (status.equals("Na praksi")) {
                cmbStatus.setSelectedItem("Na praksi");
                cmbStatus.addItem("Stalni radnik");
            }
        }

        if (jrbZenski.isSelected()) {
            if (status.equals("Stalna radnica")) {
                cmbStatus.setSelectedItem("Stalna radnica");
                cmbStatus.addItem("Na praksi");
            }

            if (status.equals("Na praksi")) {
                cmbStatus.setSelectedItem("Na praksi");
                cmbStatus.addItem("Stalna radnica");

            }
        }
//        frmGlavna.postaviStatus("Use case: Azuriranje postojecih radnika!");
        prepareForEdit();
    }//GEN-LAST:event_btnPokreniIzmenuActionPerformed

    private void btnOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdustaniActionPerformed
        dispose();
    }//GEN-LAST:event_btnOdustaniActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        String jmbg = txtJmbg.getText().trim();
        String ime = txtIme.getText().trim();
        String prezime = txtPrezime.getText().trim();
        String pol = buttonGroup1.getSelection().getActionCommand();
        String status = cmbStatus.getSelectedItem().toString();
        Mesto mesto = (Mesto) cmbMesto.getSelectedItem();
        Date datumZaposlenja = DatumPocetka.getSelectedDate().getTime();

        /*if (jmbg.isEmpty() || ime.isEmpty() || prezime.isEmpty() || status.isEmpty() || pol.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Sva polja su obavezna!!!");
            return;
        }*/

        if (jmbg.length() != 13) {
            JOptionPane.showMessageDialog(null, "JMBG mora imati 13 cifara!!!");
            return;
        }

        if (!jmbg.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(null, "JMBG mora sadrzati samo cifre!!!");
            return;
        }
        Radnik radnik = new Radnik(jmbg, ime, prezime, pol, datumZaposlenja, status, mesto);
        try {
            Radnik rad = Controler.azurirajRadnika(radnik);

            dispose();
            JOptionPane.showMessageDialog(null, "Sistem je izmenio radnika!");

            frmPretraga.popuniTabelu();
            frmPretraga.pripremiZaPretragu();
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Sistem ne moze da azurira radnika!");
            Logger.getLogger(FrmRadnik.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Sistem ne moze da azurira radnika!");
            Logger.getLogger(FrmRadnik.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Sistem ne moze da azurira radnika!");
            Logger.getLogger(FrmRadnik.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnIzmeniActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo DatumPocetka;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnOdustani;
    private javax.swing.JButton btnPokreniIzmenu;
    private javax.swing.JButton btnPretraga;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<Object> cmbMesto;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jrbMuski;
    private javax.swing.JRadioButton jrbZenski;
    private javax.swing.JLabel lbIme;
    private javax.swing.JLabel lbJmbg;
    private javax.swing.JLabel lblPol;
    private javax.swing.JLabel lblPrezime;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtJmbg;
    private javax.swing.JTextField txtPrezime;
    // End of variables declaration//GEN-END:variables

    private void popuniComboMesta() {

        try {
            cmbMesto.removeAllItems();
            List<Mesto> mesta = Controler.getInstance().vratiListuMesta();

            for (IDomain iDomain : mesta) {
                if (iDomain instanceof Mesto) {
                    cmbMesto.addItem((Mesto) iDomain);
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Sistem ne moze da ucita listu mesta!");
            Logger.getLogger(FrmRadnik.class.getName()).log(Level.SEVERE, null, ex);

        }

    }

    private void prepareForNew() {
        prepareForm(FormMode.NEW);
    }

    private void prepareForm(FormMode formMode) {
        switch (formMode) {
            case EDIT:
                btnIzmeni.setEnabled(true);

                btnPokreniIzmenu.setEnabled(false);
                btnSacuvaj.setEnabled(false);
                btnOdustani.setEnabled(true);
                //jBtnPretraga.setEnabled(true);

                jrbMuski.setEnabled(true);
                jrbZenski.setEnabled(true);

                txtJmbg.setVisible(true);
                jLabel1.setVisible(true);
                jLabel1.setEnabled(false);

                cmbMesto.setEnabled(true);
                txtIme.setEnabled(true);
                txtPrezime.setEnabled(true);
                DatumPocetka.setEnabled(true);
                cmbStatus.setEnabled(true);

                break;
            case NEW:
                btnIzmeni.setEnabled(false);

                btnPokreniIzmenu.setEnabled(false);
                btnSacuvaj.setEnabled(true);
                btnOdustani.setEnabled(true);
                //jBtnPretraga.setEnabled(true);

                txtJmbg.setVisible(true);
                cmbMesto.setEnabled(true);
                txtIme.setEnabled(true);
                txtPrezime.setEnabled(true);
                DatumPocetka.setEnabled(true);
                cmbStatus.setEnabled(true);
                break;
            case VIEW:
                btnIzmeni.setEnabled(false);

                btnPokreniIzmenu.setEnabled(true);
                btnSacuvaj.setEnabled(false);
                btnIzmeni.setEnabled(false);
                //jBtnPretraga.setEnabled(false);

                jrbMuski.setEnabled(false);
                jrbZenski.setEnabled(false);

                txtJmbg.setVisible(true);
                jLabel1.setVisible(true);
                txtJmbg.setEnabled(false);

                cmbMesto.setEnabled(false);
                txtIme.setEnabled(false);
                txtPrezime.setEnabled(false);
                cmbStatus.setEnabled(false);
                DatumPocetka.setEnabled(false);
                break;
        }
    }

    private void prepareForEdit() {
        prepareForm(FormMode.EDIT);
    }

    private void pregledRadnika(String jmbg) {
        try {
            prepareForm(FormMode.VIEW);

            Radnik radnik = Controler.getInstance().nadjiRadnikaPoJmbg(jmbg);

            txtJmbg.setText(radnik.getJmbg());
            txtIme.setText(radnik.getIme());
            txtPrezime.setText(radnik.getPrezime());
            if (radnik.getPol().equals("Muski")) {
                jrbMuski.setSelected(true);
            }
            if (radnik.getPol().equals("Zenski")) {
                jrbZenski.setSelected(true);
            }
            Calendar cal = Calendar.getInstance();
            cal.setTime(radnik.getDatumZaposlenja());
            DatumPocetka.setSelectedDate(cal);
            cmbMesto.setSelectedItem(radnik.getMesto());
            cmbStatus.addItem(radnik.getStatus());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmRadnik.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Sistem ne moze da pronadje podatke o radniku!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Sistem ne moze da pronadje podatke o radniku!");
            Logger.getLogger(FrmRadnik.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
